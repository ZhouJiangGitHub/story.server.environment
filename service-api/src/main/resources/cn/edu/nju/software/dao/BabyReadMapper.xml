<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nju.software.dao.BabyReadMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.nju.software.entity.BabyRead" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="babyReadInfoId" property="babyreadinfoid" jdbcType="INTEGER" />
    <result column="babyId" property="babyid" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
    <result column="creatTime" property="creattime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, babyReadInfoId, babyId, url, valid, creatTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.nju.software.entity.BabyReadExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from baby_read
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from baby_read
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from baby_read
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nju.software.entity.BabyReadExample" >
    delete from baby_read
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nju.software.entity.BabyRead" keyProperty="id" useGeneratedKeys="true" >
    insert into baby_read (id, babyReadInfoId, babyId, 
      url, valid, creatTime, 
      updateTime)
    values (#{id}, #{babyreadinfoid,jdbcType=INTEGER}, #{babyid,jdbcType=INTEGER}, 
      #{url,jdbcType=VARCHAR}, #{valid,jdbcType=INTEGER}, #{creattime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nju.software.entity.BabyRead" >
    insert into baby_read
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="babyreadinfoid != null" >
        babyReadInfoId,
      </if>
      <if test="babyid != null" >
        babyId,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="valid != null" >
        valid,
      </if>
      <if test="creattime != null" >
        creatTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="babyreadinfoid != null" >
        #{babyreadinfoid,jdbcType=INTEGER},
      </if>
      <if test="babyid != null" >
        #{babyid,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nju.software.entity.BabyReadExample" resultType="java.lang.Integer" >
    select count(*) from baby_read
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update baby_read
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.babyreadinfoid != null" >
        babyReadInfoId = #{record.babyreadinfoid,jdbcType=INTEGER},
      </if>
      <if test="record.babyid != null" >
        babyId = #{record.babyid,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null" >
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
      <if test="record.creattime != null" >
        creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update baby_read
    set id = #{record.id,jdbcType=INTEGER},
      babyReadInfoId = #{record.babyreadinfoid,jdbcType=INTEGER},
      babyId = #{record.babyid,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=INTEGER},
      creatTime = #{record.creattime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nju.software.entity.BabyRead" >
    update baby_read
    <set >
      <if test="babyreadinfoid != null" >
        babyReadInfoId = #{babyreadinfoid,jdbcType=INTEGER},
      </if>
      <if test="babyid != null" >
        babyId = #{babyid,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        creatTime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nju.software.entity.BabyRead" >
    update baby_read
    set babyReadInfoId = #{babyreadinfoid,jdbcType=INTEGER},
      babyId = #{babyid,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER},
      creatTime = #{creattime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>